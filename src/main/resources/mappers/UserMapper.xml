<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC
        "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.terabox.demo.mappers.UserMapper">
    <insert id="insertEmailAuth" parameterType="com.terabox.demo.entities.EmailAuthEntity">
        INSERT INTO `terabox`.`email_auths` (email, code, salt, created_at, expires_at, is_expired, is_verified, is_used)
        VALUES (#{email}, #{code}, #{salt}, #{createdAt}, #{expiresAt}, #{isExpired}, #{isVerified}, #{isUsed})
    </insert>

    <insert id="insertUser" parameterType="com.terabox.demo.entities.UserEntity">
        INSERT INTO `terabox`.`users` (email, password, nickname, birth,  membership_code, created_at, point, is_admin)
        VALUES (#{email}, #{password}, #{nickname}, #{birth}, #{membershipCode}, #{createdAt}, #{point}, #{isAdmin})
    </insert>

    <select id="selectEmailAuthByEmailCodeSalt" resultType="com.terabox.demo.entities.EmailAuthEntity">
        SELECT `email`       AS `email`,
               `code`        AS `code`,
               `salt`        AS `salt`,
               `created_at`  AS `createdAt`,
               `expires_at`  AS `expiresAt`,
               `is_expired`  AS `isExpired`,
               `is_verified` AS `isVerified`,
               `is_used`     AS `isUsed`
        FROM `terabox`.`email_auths`
        WHERE BINARY `email` = #{email}
          AND BINARY `code` = #{code}
          AND BINARY `salt` = #{salt}
        LIMIT 1
    </select>

    <select id="selectUserByEmail" resultType="com.terabox.demo.entities.UserEntity">
        SELECT `email`           AS `email`,
               `password`        AS `password`,
               `nickname`        AS `nickname`,
               `birth`           AS `birth`,
               `membership_code` AS `membershipCode`,
               `created_at`      AS `createdAt`,
               `point`           AS `point`,
               `is_admin`        AS `isAdmin`
        FROM `terabox`.`users`
        WHERE BINARY `email` = #{email}
        LIMIT 1
    </select>

    <select id="selectUserByNickname" resultType="com.terabox.demo.entities.UserEntity">
        SELECT `email`           AS `email`,
               `password`        AS `password`,
               `nickname`        AS `nickname`,
               `birth`           AS `birth`,
               `membership_code` AS `membershipCode`,
               `created_at`      AS `createdAt`,
               `point`           AS `point`,
               `is_admin`        AS `isAdmin`
        FROM `terabox`.`users`
        WHERE BINARY `nickname` = #{nickname}
        LIMIT 1
    </select>

    <update id="updateEmailAuth" parameterType="com.terabox.demo.entities.EmailAuthEntity">
        UPDATE `terabox`.`email_auths`
        SET `created_at`  = #{createdAt},
            `expires_at`  = #{expiresAt},
            `is_expired`  = #{isExpired},
            `is_verified` = #{isVerified},
            `is_used`     = #{isUsed}
        WHERE BINARY `email` = #{email}
          AND BINARY `code` = #{code}
          AND BINARY `salt` = #{salt}
    </update>

    <update id="updateUser" parameterType="com.terabox.demo.entities.UserEntity">
        UPDATE terabox.users
        SET `password` = #{password},
            `nickname` = #{nickname},
            `birth`= #{birth},
            `membership_code` = #{membershipCode},
            `created_at` = #{createdAt},
            `point` = #{point}
        WHERE BINARY `email` = #{email}
        LIMIT 1
    </update>
</mapper>